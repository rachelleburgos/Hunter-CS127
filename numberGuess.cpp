#include <cstdlib>
#include <ctime>
#include <iostream>
#include <limits>

using namespace std;

int main () {

  int randomNumber,
      usrGuess,
      i = 0; // track number of trials

  char repeatChoice;


/***************** BEGINNING OF PROGRAM *****************/

  while (true) { // repeat game until repeat == false (user doesn't want to play again)

    srand ((unsigned) time (0));	      // srand -- new seed;  unsigned -- # is never negative;  time() -- time in linux epoch
    randomNumber = (rand () % 100) + 1; // initialize randomNumber with the number generated by srand() ;
                                        // modulo to set max range to 100 ; +1 so that 0 isn't a result (as range musgt be within 1 - 100)
    cout << randomNumber << endl;	      // print randomNumber to terminal

    while (randomNumber != usrGuess && (i != 10)) {  // repeat until user guesses the target number correctly or 10 guesses reached

        cout << "Guess what integer between 1 and 100 I'm thinking of... ";
        cin >> usrGuess; // retrieve user's guess

        /*while (usrGuess < 1 && usrGuess > 100 && (typeid(usrGuess).name() != typeid(1).name())) {
            // ensure input is an int & within range
            cin.clear(); // clear error flags
            cin.ignore(numeric_limits<streamsize>::max(), '\n'); // clear variable
            cout << "Please insert a valid answer: ";
            cin >> usrGuess;
            cout << endl;
        }
        */
        if (usrGuess < randomNumber) {        // if usrGuess is less than the num randomly generated, display msg in block
          cout << "A little higher... ಥ_ಥ " << endl;
        }
        else if ( usrGuess > randomNumber ) { // if usrGuess is larger than the num randomly generated, display msg in block
          cout << "A little lower... ಥ_ಥ "<< endl;
        }

        i++; //next game
    }

    if (usrGuess == randomNumber) { // compare both variables to see if user guesses correctly
        cout << "You guessed correctly! (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ "<< endl; // congratulatory message
    }
    else { // if the condition above wasn't true, do this
        cout << "I won ლ(｀∀´ლ)" << endl; // loss message
    }

    cout << "Would you like to play another game? Y/N  ";
    cin >> repeatChoice; // see if user wants to play another game, stored in repeatChoice
    cout << endl;


    while ((repeatChoice != 'Y') && (repeatChoice != 'y') && (repeatChoice != 'N') && (repeatChoice != 'n')) {
        // ensure input is a char or matches // with the 4 options
        cin.clear(); // clear error flags
        cin.ignore(numeric_limits<streamsize>::max(), '\n'); // clear variable
        cout << "Please insert a valid answer: ";
        cin >> repeatChoice;
        cout << endl;
    }

    if (repeatChoice == 'y' || repeatChoice == 'Y') { // compare input to 'y' and 'Y'
        // if user inputs yes, repeat the game
        cout << "\n" << "------------------" << "\n\n\n\n";
    }
    else if (repeatChoice == 'n' || 'N') { // compare input to 'n' and 'N'
        break;
    }
  }
 // repeat game if the user said they want to quit

  return 0; //ensure program ended normally
}
